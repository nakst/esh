#library "module_imaging";

// TODO Use the shape types from the geometry module.
// TODO Vector graphics.

handletype Bitmap;
handletype Animation;

Bitmap Create(int width, int height) #extcall;

int Width(Bitmap bitmap) #extcall;
int Height(Bitmap bitmap) #extcall;
void Crop(Bitmap bitmap, int left, int right, int top, int bottom) #extcall;

void Blit(Bitmap destination, Bitmap source, int x, int y) #extcall;
void DrawBlock(Bitmap destination, int left, int right, int top, int bottom, int color) #extcall;

int ReadPixel(Bitmap bitmap, int x, int y) #extcall;

err[Bitmap] Load(str data) #extcall;
err[Bitmap] LoadFromPath(str path) { err[str] data = FileReadAll(path); reterr data; return Load(data:assert()); }
err[str] Save(Bitmap bitmap, str format) #extcall; // Currently, only format == "png" is supported.

Animation AnimationCreate(int width, int height) #extcall;
void AnimationAddFrame(Animation animation, Bitmap frame, float time) #extcall;
err[str] AnimationSave(Animation animation, str format) #extcall; // // Currently, only format == "gif" is supported.

str ToASCIIArt(Bitmap bitmap, int scaleW, int scaleH) {
	int bitmapW = Width(bitmap);
	int bitmapH = Height(bitmap);
	str out = "";
	str lookup = " .,:;ox\%#@";

	for int y = 0; y < bitmapH; y += scaleH {
		for int x = 0; x < bitmapW; x += scaleW {
			int pixel = ReadPixel(bitmap, x, y); // TODO Average over the area?
			int index = ((((pixel & 0xFF0000) >> 16) + ((pixel & 0xFF00) >> 8) + ((pixel & 0xFF) >> 0)) / 3) / 26;
			out += lookup[index];
		}

		out += "\n";
	}

	return out;
}
